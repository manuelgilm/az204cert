
name: MLflow Server Deploy
on:
  push:
    branches:
      - master
    paths:
      - 'mlflow_server/trigger.txt'
  workflow_dispatch:
env:
  RESOURCE_GROUP_NAME: "mlflow_server_rg"
  STORAGE_ACCOUNT_NAME: "mlflowserverstrggs"
  AZURE_CONTAINER_REGISTRY_NAME: "mlflowacrgs"
  AZURE_POSTGRESQL_NAME: "mlflowserverpsqlgs"
  DATABASE_NAME: "mlflowdb"
  COSMOS_DB_ACCOUNT_NAME: "mlflow_serverosmosdbgs"
  CONTAINER_APP_NAME: "mlflow_servers"
  CONTAINER_APP_ENV_NAME: "mlflow_serverenv"
  REGISTRY_SERVER: "https://docker.io"
  REGISTRY_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  LOCATION: "brazilsouth"
  IMAGE_NAME: "gilsama/mlflow_serverlatest"

jobs:
  create_azure_resources:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Resource Group
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            # Check if the resource group already exists
            existing_rg=$(az group exists --name ${{ env.RESOURCE_GROUP_NAME }})
            if [ "$existing_rg" = "false" ]; then
              echo "Creating resource group: ${{ env.RESOURCE_GROUP_NAME }}"
              az group create --name ${{ env.RESOURCE_GROUP_NAME }} --location ${{ env.LOCATION }}
            else
              echo "Resource group ${{ env.RESOURCE_GROUP_NAME }} already exists."
            fi

      - name: Create Storage Account
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            # Check if the storage account already exists
            existing_storage=$(az storage account list --resource-group ${{ env.RESOURCE_GROUP_NAME }} --query "[?name=='${{ env.STORAGE_ACCOUNT_NAME }}'].name" -o tsv)
            if [ -n "$existing_storage" ]; then
              echo "Storage account ${{ env.STORAGE_ACCOUNT_NAME }} already exists."
            else
              echo "Creating storage account: ${{ env.STORAGE_ACCOUNT_NAME }}"
              az storage account create \
                --name ${{ env.STORAGE_ACCOUNT_NAME }} \
                --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
                --location ${{ env.LOCATION }} \
                --sku Standard_LRS
            fi
      - name: Create a PostgreSQL database
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            # Check if the PostgreSQL server already exists
            existing_pg=$(az postgres server list --resource-group ${{ env.RESOURCE_GROUP_NAME }} --query "[?name=='${{ env.AZURE_POSTGRESQL_NAME }}'].name" -o tsv)
            if [ -n "$existing_pg" ]; then
              echo "PostgreSQL server ${{ env.AZURE_POSTGRESQL_NAME }} already exists."
            else
              echo "Creating PostgreSQL server: ${{ env.AZURE_POSTGRESQL_NAME }}"
              az postgres server create \
                --name ${{ env.AZURE_POSTGRESQL_NAME }} \
                --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
                --location ${{ env.LOCATION }} \
                --admin-user ${{ secrets.AZ_POSTGRESQL_DB_ADMIN_USERNAME }} \
                --admin-password ${{ secrets.AZ_POSTGRESQL_DB_ADMIN_PASSWORD }} \
                --sku-name B1ms \
                --version 11
              
              # Create a database in the PostgreSQL server
              az postgres db create \
                --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
                --server-name ${{ env.AZURE_POSTGRESQL_NAME }} \
                --name ${{ env.DATABASE_NAME }}
            fi
      - name: Create Azure Container Registry
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            # Check if the ACR already exists
            existing_acr=$(az acr list --resource-group ${{ env.RESOURCE_GROUP_NAME }} --query "[?name=='${{ env.STORAGE_ACCOUNT_NAME }}'].name" -o tsv)
            if [ -n "$existing_acr" ]; then
              echo "Azure Container Registry ${{ env.AZURE_CONTAINER_REGISTRY_NAME }} already exists."
            else
              echo "Creating Azure Container Registry: ${{ env.AZURE_CONTAINER_REGISTRY_NAME }}"
              az acr create \
                --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
                --name ${{ env.AZURE_CONTAINER_REGISTRY_NAME }} \
                --sku Basic \
                --admin-enabled true
            fi
    